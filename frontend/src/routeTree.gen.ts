/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardLayoutImport } from './routes/_dashboardLayout'
import { Route as IndexImport } from './routes/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as DashboardLayoutSearchIndexImport } from './routes/_dashboardLayout/search/index'
import { Route as DashboardLayoutDashboardIndexImport } from './routes/_dashboardLayout/dashboard/index'
import { Route as DashboardLayoutCoursesIndexImport } from './routes/_dashboardLayout/courses/index'
import { Route as DashboardLayoutCategoriesIndexImport } from './routes/_dashboardLayout/categories/index'
import { Route as AuthCallbackProviderIdImport } from './routes/auth.callback.$providerId'
import { Route as DashboardLayoutCoursesCourseSlugImport } from './routes/_dashboardLayout/courses/$courseSlug'
import { Route as DashboardLayoutUserSettingsImport } from './routes/_dashboardLayout/_user/settings'
import { Route as DashboardLayoutUserProfileImport } from './routes/_dashboardLayout/_user/profile'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: '/_dashboardLayout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/',
  getParentRoute: () => LoginRoute,
} as any)

const DashboardLayoutSearchIndexRoute = DashboardLayoutSearchIndexImport.update(
  {
    path: '/search/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any,
)

const DashboardLayoutDashboardIndexRoute =
  DashboardLayoutDashboardIndexImport.update({
    path: '/dashboard/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutCoursesIndexRoute =
  DashboardLayoutCoursesIndexImport.update({
    path: '/courses/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutCategoriesIndexRoute =
  DashboardLayoutCategoriesIndexImport.update({
    path: '/categories/',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const AuthCallbackProviderIdRoute = AuthCallbackProviderIdImport.update({
  path: '/auth/callback/$providerId',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutCoursesCourseSlugRoute =
  DashboardLayoutCoursesCourseSlugImport.update({
    path: '/courses/$courseSlug',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutUserSettingsRoute =
  DashboardLayoutUserSettingsImport.update({
    path: '/settings',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutUserProfileRoute = DashboardLayoutUserProfileImport.update(
  {
    path: '/profile',
    getParentRoute: () => DashboardLayoutRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_dashboardLayout': {
      id: '/_dashboardLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/'
      fullPath: '/login/'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof LoginImport
    }
    '/_dashboardLayout/_user/profile': {
      id: '/_dashboardLayout/_user/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof DashboardLayoutUserProfileImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_dashboardLayout/_user/settings': {
      id: '/_dashboardLayout/_user/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DashboardLayoutUserSettingsImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_dashboardLayout/courses/$courseSlug': {
      id: '/_dashboardLayout/courses/$courseSlug'
      path: '/courses/$courseSlug'
      fullPath: '/courses/$courseSlug'
      preLoaderRoute: typeof DashboardLayoutCoursesCourseSlugImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/auth/callback/$providerId': {
      id: '/auth/callback/$providerId'
      path: '/auth/callback/$providerId'
      fullPath: '/auth/callback/$providerId'
      preLoaderRoute: typeof AuthCallbackProviderIdImport
      parentRoute: typeof rootRoute
    }
    '/_dashboardLayout/categories/': {
      id: '/_dashboardLayout/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof DashboardLayoutCategoriesIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_dashboardLayout/courses/': {
      id: '/_dashboardLayout/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof DashboardLayoutCoursesIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_dashboardLayout/dashboard/': {
      id: '/_dashboardLayout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutDashboardIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_dashboardLayout/search/': {
      id: '/_dashboardLayout/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof DashboardLayoutSearchIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  DashboardLayoutRoute: DashboardLayoutRoute.addChildren({
    DashboardLayoutUserProfileRoute,
    DashboardLayoutUserSettingsRoute,
    DashboardLayoutCoursesCourseSlugRoute,
    DashboardLayoutCategoriesIndexRoute,
    DashboardLayoutCoursesIndexRoute,
    DashboardLayoutDashboardIndexRoute,
    DashboardLayoutSearchIndexRoute,
  }),
  LoginRoute: LoginRoute.addChildren({ LoginIndexRoute }),
  AuthCallbackProviderIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_dashboardLayout",
        "/login",
        "/auth/callback/$providerId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_dashboardLayout": {
      "filePath": "_dashboardLayout.tsx",
      "children": [
        "/_dashboardLayout/_user/profile",
        "/_dashboardLayout/_user/settings",
        "/_dashboardLayout/courses/$courseSlug",
        "/_dashboardLayout/categories/",
        "/_dashboardLayout/courses/",
        "/_dashboardLayout/dashboard/",
        "/_dashboardLayout/search/"
      ]
    },
    "/login": {
      "filePath": "login.tsx",
      "children": [
        "/login/"
      ]
    },
    "/login/": {
      "filePath": "login/index.tsx",
      "parent": "/login"
    },
    "/_dashboardLayout/_user/profile": {
      "filePath": "_dashboardLayout/_user/profile.tsx",
      "parent": "/_dashboardLayout"
    },
    "/_dashboardLayout/_user/settings": {
      "filePath": "_dashboardLayout/_user/settings.tsx",
      "parent": "/_dashboardLayout"
    },
    "/_dashboardLayout/courses/$courseSlug": {
      "filePath": "_dashboardLayout/courses/$courseSlug.tsx",
      "parent": "/_dashboardLayout"
    },
    "/auth/callback/$providerId": {
      "filePath": "auth.callback.$providerId.tsx"
    },
    "/_dashboardLayout/categories/": {
      "filePath": "_dashboardLayout/categories/index.tsx",
      "parent": "/_dashboardLayout"
    },
    "/_dashboardLayout/courses/": {
      "filePath": "_dashboardLayout/courses/index.tsx",
      "parent": "/_dashboardLayout"
    },
    "/_dashboardLayout/dashboard/": {
      "filePath": "_dashboardLayout/dashboard/index.tsx",
      "parent": "/_dashboardLayout"
    },
    "/_dashboardLayout/search/": {
      "filePath": "_dashboardLayout/search/index.tsx",
      "parent": "/_dashboardLayout"
    }
  }
}
ROUTE_MANIFEST_END */
